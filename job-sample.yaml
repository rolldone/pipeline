# {{PIPELINE_NAME}} Pipeline - Docker-focused CI/CD Template
# Generated by make-sync pipeline create command

pipeline:
  name: "{{PIPELINE_NAME}}"
  description: "Docker-based CI/CD pipeline for {{PIPELINE_NAME}}"
  strict_variables: false

  # Global variables (can be overridden per execution)
  variables:
    DOCKER_REGISTRY: "docker.io"
    DOCKER_REPO: "your-org/{{PIPELINE_NAME}}"
    DOCKER_TAG: "latest"
    BUILD_CONTEXT: "."
    DOCKERFILE: "Dockerfile"

  # Job definitions
  jobs:
    # Prepare job - Setup and validation
    - name: "prepare"
      description: "Prepare environment and validate prerequisites"
      steps:
        - name: "check-docker"
          type: "command"
          commands: ["docker --version"]
          description: "Verify Docker is available"

        - name: "check-files"
          type: "command"
          commands: ["ls -la {{BUILD_CONTEXT}}"]
          description: "Check build context exists"

        - name: "validate-dockerfile"
          type: "command"
          commands: ["test -f {{DOCKERFILE}} && echo 'Dockerfile found' || (echo 'Dockerfile not found' && exit 1)"]
          description: "Ensure Dockerfile exists"

        - name: "save-build-info"
          type: "command"
          commands: ["echo 'Build prepared at $(date)'"]
          save_output: "build_timestamp"
          description: "Save build timestamp for later use"

    # Build job - Docker image building
    - name: "build"
      description: "Build Docker image"
      depends_on: ["prepare"]
      steps:
        - name: "build-image"
          type: "command"
          commands: ["docker build -t {{DOCKER_REGISTRY}}/{{DOCKER_REPO}}:{{DOCKER_TAG}} -f {{DOCKERFILE}} {{BUILD_CONTEXT}}"]
          description: "Build Docker image with specified tag"

        - name: "verify-build"
          type: "command"
          commands: ["docker images {{DOCKER_REGISTRY}}/{{DOCKER_REPO}}:{{DOCKER_TAG}}"]
          description: "Verify image was built successfully"

        - name: "save-image-info"
          type: "command"
          commands: ["docker inspect {{DOCKER_REGISTRY}}/{{DOCKER_REPO}}:{{DOCKER_TAG}} | jq -r '.[0].Id'"]
          save_output: "image_id"
          description: "Save image ID for deployment tracking"

    # Test job - Run tests in container
    - name: "test"
      description: "Run tests using the built Docker image"
      depends_on: ["build"]
      steps:
        - name: "run-tests"
          type: "command"
          commands: ["docker run --rm {{DOCKER_REGISTRY}}/{{DOCKER_REPO}}:{{DOCKER_TAG}} npm test"]
          description: "Run test suite in container"
          continue_on_error: true

        - name: "check-test-results"
          type: "command"
          commands: ["echo 'Tests completed - check logs above'"]
          description: "Placeholder for test result validation"

    # Deploy job - Push image and deploy
    - name: "deploy"
      description: "Deploy the application"
      depends_on: ["test"]
      steps:
        - name: "login-registry"
          type: "command"
          commands: ["echo 'Logging into {{DOCKER_REGISTRY}}'"]
          description: "Login to Docker registry (replace with actual login command)"

        - name: "push-image"
          type: "command"
          commands: ["docker push {{DOCKER_REGISTRY}}/{{DOCKER_REPO}}:{{DOCKER_TAG}}"]
          description: "Push image to registry"

        - name: "deploy-app"
          type: "command"
          commands: ["echo 'Deploying {{DOCKER_REPO}}:{{DOCKER_TAG}} to production'"]
          description: "Deploy application (replace with actual deployment commands)"

        - name: "verify-deployment"
          type: "command"
          commands: ["echo 'Deployment completed successfully'"]
          description: "Verify deployment success"

    # Rollback job - Emergency rollback (can be called via goto_job)
    - name: "rollback"
      description: "Rollback to previous version"
      steps:
        - name: "rollback-deploy"
          type: "command"
          commands: ["echo 'Rolling back to previous version'"]
          description: "Execute rollback procedures"

        - name: "notify-rollback"
          type: "command"
          commands: ["echo 'Rollback completed - manual verification required'"]
          description: "Notify team about rollback"

# Execution configurations
executions:
  - name: "Development Build"
    key: "dev"
    pipeline: "{{PIPELINE_NAME}}.yaml"
    hosts: ["localhost"]
    variables:
      DOCKER_TAG: "dev-$(date +%Y%m%d-%H%M%S)"

  - name: "Production Deploy"
    key: "prod"
    pipeline: "{{PIPELINE_NAME}}.yaml"
    hosts: ["prod-server-01", "prod-server-02"]
    variables:
      DOCKER_TAG: "$(git rev-parse --short HEAD)"